{
	"nodes":[
		{"id":"9094e5f204bb808a","type":"text","text":"Public Routes - **/api**","x":-679,"y":-800,"width":445,"height":60},
		{"id":"47f5ee717f590ec8","type":"text","text":"**/v1/**","x":-340,"y":-520,"width":250,"height":60},
		{"id":"6093c1372477a4b3","type":"text","text":"# POST - /login\n*Function - login*\n\nExpected Input:\n```json\n{\n  username: string,\n  password: string\n}\n```\n*OR*\n```json\n{\n  key: string\n}\n```\n\nOutput:\n```json\n{\n  access_token: string,\n  refresh_token: string\n}\n```\n","x":-1160,"y":-40,"width":764,"height":900},
		{"id":"5686585f6c31742c","type":"text","text":"# Middleware\n\nPurpose: Checks if a user has a proper authentication token\n\n`Returns`\n```ts\nconst auth = user_logged_in(u_token);\nif (auth) {\n  next();\n} else {\n  return res.status(403);\n}\n```","x":-97,"y":-40,"width":829,"height":563},
		{"id":"dad8e67f8909f6fc","type":"text","text":"# POST - /addUserToWorkout\n*Function - addUserToWorkout*\n\nExpected Input:\nParams: `user_id, skip`\n\nOutput:\n```ts\n{\n  success:boolean\n}\n```\n","x":175,"y":2280,"width":764,"height":520},
		{"id":"bd4b91401aad40e6","type":"text","text":"# GET - /completeSet\n*Function - completeSet*\n\n> : This function must check that the current user acting is the same user in the set, this can be overwritten by an admin. \n\nExpected Input:\nParams: `user_id, set_id, sets, reps?`\n\nOutput:\n```ts\n{\n  success:boolean,\n  current_user: number,\n  current_exericse: {\n    exercise_id: number,\n    sets: number,\n    reps?: number,\n    time_based?: boolean\n  }\n}\n```\n","x":-1542,"y":2232,"width":764,"height":920},
		{"id":"81faaa876d6387b7","type":"text","text":"# GET - /currentWorkout\n*Function - getActiveWorkout*\n\nExpected Input:\nParams: `user_id`\n\nOutput:\n```ts\n{\n  current_user: number,\n  current_exericse: {\n    exercise_id: number,\n    sets: number,\n    reps?: number,\n    time_based?: boolean\n  }\n}\n```\n","x":1040,"y":1017,"width":764,"height":743},
		{"id":"2628c494fe3420ef","type":"text","text":"# GET - /finishWorkout\n*Function - finishWorkout*\n\nExpected Input:\nParams: `workout_id`\n\nOutput:\n```ts\n{\n  success:boolean,\n  time:number\n}\n```\n","x":1040,"y":1954,"width":764,"height":556},
		{"id":"4e087ba0fcbf251f","type":"text","text":"# GET - /goBack\n*Function - goBack*\n\n> This function must check that the current user acting is the same user in the set, this can be overwritten by an admin. \n\nExpected Input:\nParams: `user_id`\n\nOutput:\n```ts\n{\n  success:boolean,\n  current_user: number,\n  current_exericse: {\n    exercise_id: number,\n    sets: number,\n    reps?: number,\n    time_based?: boolean\n  }\n}\n```\n","x":-686,"y":2080,"width":764,"height":920},
		{"id":"b7ae7c7af9b09d75","type":"text","text":"# POST - /start\n\n*Function - startWorkout*\n\nExpected Input:\n```ts\n{\n  workout_id: number,\n  users: number[]\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean\n  current_user: number,\n  current_exericse: {\n    exercise_id: number,\n    sets: number,\n    reps?: number,\n    time_based?: boolean\n  }\n}\n```\n","x":-2200,"y":967,"width":764,"height":880},
		{"id":"929c3262c78f3eb4","type":"text","text":"# GET - /editSet\n*Function - editSet*\n\n\nExpected Input:\nParams: `user_id, set_id, sets?, reps?`\n\nOutput:\n```ts\n{\n  success:boolean,\n  current_user: number,\n  current_exericse: {\n    exercise_id: number,\n    sets: number,\n    reps?: number,\n    time_based?: boolean\n  }\n}\n```\n","x":-1280,"y":1097,"width":764,"height":885},
		{"id":"df4ad9dec44e3fe0","type":"text","text":"Subroute - **/workout**","x":78,"y":820,"width":479,"height":80},
		{"id":"1109481e01cccdf9","type":"text","text":"Subroute - **/user**","x":2245,"y":1163,"width":479,"height":60},
		{"id":"2c4bb07683b6f497","type":"text","text":"# POST - /addExerciseToWorkout \n*Function - addExerciseToWorkout*\n\nExpected Input:\n```ts\n{\n  exercise_id:number,\n  sets?:number,\n  reps?:number\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n  workout_id:number\n}\n```\n","x":4870,"y":2549,"width":1055,"height":719},
		{"id":"48e26d1bda403058","type":"text","text":"# POST - /addWorkout \n*Function - addWorkout*\n\nExpected Input:\n```ts\n{\n  name:string,\n  exercises?:number[]\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n  workout_id:number\n}\n```\n","x":6280,"y":2549,"width":764,"height":719},
		{"id":"a8ba6862c06ef544","type":"text","text":"# POST - /replaceExerciseInWorkout \n*Function - swapExerciseInWorkout*\n\nExpected Input:\n```ts\n{\n  exercise_id_new:number,\n  exercise_id_old:number,\n  sets?:number,\n  reps?:number\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n  workout_id:number\n}\n```\n","x":7520,"y":2549,"width":1055,"height":719},
		{"id":"b68f38d312aba7b8","type":"text","text":"Subroute - **/admin**","x":4480,"y":1017,"width":267,"height":60},
		{"id":"f33dc8aa8b076243","type":"text","text":"# Middleware\n\nPurpose: Checks if a user is an admin\n\n`Returns`\n```ts\nconst user = database.getUser(u_token);\nif(user.permission & 0b0010 !== 0) {\n  next();\n} else {\n  return res.status(403);\n}\n \n```","x":6080,"y":1309,"width":829,"height":604},
		{"id":"f542dc7b87814970","x":3797,"y":-480,"width":250,"height":60,"type":"text","text":"Subroute - **/root**"},
		{"id":"825da31d6054d546","type":"text","text":"# Middleware\n\nPurpose: Checks if a user is the root account\n\n`Returns`\n```ts\nconst user = database.getUser(u_token);\nif(user.permission & 0b0010 !== 0) {\n  next();\n} else {\n  return res.status(403);\n}\n \n```","x":4600,"y":-450,"width":829,"height":504},
		{"id":"2f6dc09b3d627d18","type":"text","text":"# POST - /addUser\n*Function - addUser*\n\nInput:\n```ts\n{\n  user_id: number,\n  password?: string,\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n  nfc_key: string\n}\n```\n","x":4480,"y":240,"width":764,"height":703},
		{"id":"ea0fbbed84d29213","type":"text","text":"# GET - /getUserNFC\n*Function - addUser*\n\nParams: `user_id`\n\nOutput:\n```ts\n{\n  success:boolean,\n  nfc_key: string\n}\n```\n","x":3600,"y":240,"width":764,"height":480},
		{"id":"d79ed7403660374c","type":"text","text":"# POST - /editUser\n*Function - editUser*\n\nInput:\n```ts\n{\n  user_id: number,\n  password?: string,\n  nfc_key?: string\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n}\n```\n","x":5480,"y":240,"width":764,"height":703},
		{"id":"8d3125e3b733485b","type":"text","text":"# POST - /removeUser\n*Function - removeUser*\n\nInput:\n```ts\n{\n  user_id: number,\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean,\n}\n```\n","x":6400,"y":344,"width":764,"height":703},
		{"id":"50ba4493c890e01f","type":"text","text":"# Middleware\n\nPurpose: Checks if a user has the permission to modify or insert data into a entity (either same user or admin)\n\n`Returns`\n```ts\nconst user_id = header['User-ID'];\nconst user = database.getUser(u_token);\nif(user.user_id === user_id || user.permission & 0b0010 !== 0) {\n  next();\n} else {\n  return res.status(403);\n}\n \n```","x":2485,"y":1407,"width":829,"height":604},
		{"id":"e6a995072a50ec19","type":"text","text":"# POST - /measure\n*Function - addMeasurement*\n\nExpected Input:\n```ts\n{\n  weight?:number,\n  bodyfat?:number,\n  neck?:number,\n  chest?:number,\n  shoulders?:number,\n  waist?:number,\n  left_arm?:number,\n  right_arm?:number,\n  left_forearm?:number,\n  right_forearm?:number,\n  left_quad?:number,\n  right_quad?:number\n}\n```\n\nOutput:\n```ts\n{\n  success:boolean\n}\n```\n","x":2103,"y":2403,"width":764,"height":970},
		{"id":"5ef6a9956586af4b","type":"text","text":"# POST - /getMeasurements\n*Function - addMeasurement*\n\nOutput:\n```ts\n{\n  success:boolean,\n  measurements:{\n    weight?:number,\n    bodyfat?:number,\n    neck?:number,\n    chest?:number,\n    shoulders?:number,\n    waist?:number,\n    left_arm?:number,\n    right_arm?:number,\n    left_forearm?:number,\n    right_forearm?:number,\n    left_quad?:number,\n    right_quad?:number,\n    date: number\n  }[]\n}\n```\n","x":3040,"y":2403,"width":764,"height":900}
	],
	"edges":[
		{"id":"e79d5a74c622aff8","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"b7ae7c7af9b09d75","toSide":"top"},
		{"id":"75a804d385ec5c2d","fromNode":"5686585f6c31742c","fromSide":"bottom","toNode":"df4ad9dec44e3fe0","toSide":"top"},
		{"id":"620ad2fc4bad29bc","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"81faaa876d6387b7","toSide":"top"},
		{"id":"4b5c20593add991c","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"bd4b91401aad40e6","toSide":"top"},
		{"id":"b187f8707cfd80e2","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"4e087ba0fcbf251f","toSide":"top"},
		{"id":"a2ffb6b425e15bc6","fromNode":"9094e5f204bb808a","fromSide":"bottom","toNode":"47f5ee717f590ec8","toSide":"top"},
		{"id":"064ff31fc2821d57","fromNode":"47f5ee717f590ec8","fromSide":"bottom","toNode":"6093c1372477a4b3","toSide":"top"},
		{"id":"c9637182c5f27873","fromNode":"47f5ee717f590ec8","fromSide":"bottom","toNode":"5686585f6c31742c","toSide":"top"},
		{"id":"a35ae4f3d170d2a7","fromNode":"5686585f6c31742c","fromSide":"bottom","toNode":"1109481e01cccdf9","toSide":"top"},
		{"id":"7e2bf9f1ab21170e","fromNode":"50ba4493c890e01f","fromSide":"bottom","toNode":"e6a995072a50ec19","toSide":"top"},
		{"id":"8f7e6e88aea63c01","fromNode":"50ba4493c890e01f","fromSide":"bottom","toNode":"5ef6a9956586af4b","toSide":"top"},
		{"id":"19259f74ee31b195","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"dad8e67f8909f6fc","toSide":"top"},
		{"id":"2ea37f883645060e","fromNode":"df4ad9dec44e3fe0","fromSide":"bottom","toNode":"2628c494fe3420ef","toSide":"top"},
		{"id":"67e6ba50bef5565d","fromNode":"5686585f6c31742c","fromSide":"bottom","toNode":"b68f38d312aba7b8","toSide":"bottom"},
		{"id":"bc9b435aa303d70c","fromNode":"b68f38d312aba7b8","fromSide":"bottom","toNode":"f33dc8aa8b076243","toSide":"top"},
		{"id":"2baa6de16071e3a8","fromNode":"f33dc8aa8b076243","fromSide":"bottom","toNode":"48e26d1bda403058","toSide":"top"},
		{"id":"daff9ea4a77b0588","fromNode":"f33dc8aa8b076243","fromSide":"bottom","toNode":"2c4bb07683b6f497","toSide":"top"},
		{"id":"c82819a19ab36525","fromNode":"f33dc8aa8b076243","fromSide":"bottom","toNode":"a8ba6862c06ef544","toSide":"top"},
		{"id":"24fff5a61aa3307c","fromNode":"929c3262c78f3eb4","fromSide":"top","toNode":"df4ad9dec44e3fe0","toSide":"bottom"},
		{"id":"601de01001f80257","fromNode":"1109481e01cccdf9","fromSide":"bottom","toNode":"50ba4493c890e01f","toSide":"top"},
		{"id":"d30e33c042e3964d","fromNode":"5686585f6c31742c","fromSide":"bottom","toNode":"f542dc7b87814970","toSide":"top"},
		{"id":"d0cd3364947ffc06","fromNode":"f542dc7b87814970","fromSide":"bottom","toNode":"825da31d6054d546","toSide":"top"},
		{"id":"790c101fb189bd63","fromNode":"825da31d6054d546","fromSide":"bottom","toNode":"d79ed7403660374c","toSide":"top"},
		{"id":"9fe50bf95873a3ab","fromNode":"825da31d6054d546","fromSide":"bottom","toNode":"2f6dc09b3d627d18","toSide":"top"},
		{"id":"65b50289eef68b86","fromNode":"825da31d6054d546","fromSide":"bottom","toNode":"ea0fbbed84d29213","toSide":"top"},
		{"id":"25dd162cea11396e","fromNode":"825da31d6054d546","fromSide":"bottom","toNode":"8d3125e3b733485b","toSide":"top"}
	]
}